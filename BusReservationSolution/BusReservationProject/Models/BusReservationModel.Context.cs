//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusReservationProject.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusReservationEntities1 : DbContext
    {
        public BusReservationEntities1()
            : base("name=BusReservationEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<BusDetail> BusDetails { get; set; }
        public virtual DbSet<DriverDetail> DriverDetails { get; set; }
        public virtual DbSet<GuestUserDetail> GuestUserDetails { get; set; }
        public virtual DbSet<JourneyRoute> JourneyRoutes { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<TransactionDetail> TransactionDetails { get; set; }
        public virtual DbSet<Trip> Trips { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<PassengerDetail> PassengerDetails { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int proc_AddBus(string busNumber, Nullable<int> driverID, string driverPhone, string busType, Nullable<int> numberOfSeats, Nullable<bool> busAvailability)
        {
            var busNumberParameter = busNumber != null ?
                new ObjectParameter("BusNumber", busNumber) :
                new ObjectParameter("BusNumber", typeof(string));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            var driverPhoneParameter = driverPhone != null ?
                new ObjectParameter("DriverPhone", driverPhone) :
                new ObjectParameter("DriverPhone", typeof(string));
    
            var busTypeParameter = busType != null ?
                new ObjectParameter("BusType", busType) :
                new ObjectParameter("BusType", typeof(string));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("NumberOfSeats", numberOfSeats) :
                new ObjectParameter("NumberOfSeats", typeof(int));
    
            var busAvailabilityParameter = busAvailability.HasValue ?
                new ObjectParameter("BusAvailability", busAvailability) :
                new ObjectParameter("BusAvailability", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AddBus", busNumberParameter, driverIDParameter, driverPhoneParameter, busTypeParameter, numberOfSeatsParameter, busAvailabilityParameter);
        }
    
        public virtual int proc_AddDriver(string firstName, string lastName, string phoneNumber)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AddDriver", firstNameParameter, lastNameParameter, phoneNumberParameter);
        }
    
        public virtual int proc_AddRoute(Nullable<int> tripID, string fromLocation, string toLocation, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string fromTime, string toTime, string fromDescription, string toDescription, Nullable<int> fare, Nullable<int> numberOfSeats)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));
    
            var fromLocationParameter = fromLocation != null ?
                new ObjectParameter("FromLocation", fromLocation) :
                new ObjectParameter("FromLocation", typeof(string));
    
            var toLocationParameter = toLocation != null ?
                new ObjectParameter("ToLocation", toLocation) :
                new ObjectParameter("ToLocation", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fromTimeParameter = fromTime != null ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(string));
    
            var toTimeParameter = toTime != null ?
                new ObjectParameter("ToTime", toTime) :
                new ObjectParameter("ToTime", typeof(string));
    
            var fromDescriptionParameter = fromDescription != null ?
                new ObjectParameter("FromDescription", fromDescription) :
                new ObjectParameter("FromDescription", typeof(string));
    
            var toDescriptionParameter = toDescription != null ?
                new ObjectParameter("ToDescription", toDescription) :
                new ObjectParameter("ToDescription", typeof(string));
    
            var fareParameter = fare.HasValue ?
                new ObjectParameter("Fare", fare) :
                new ObjectParameter("Fare", typeof(int));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("NumberOfSeats", numberOfSeats) :
                new ObjectParameter("NumberOfSeats", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AddRoute", tripIDParameter, fromLocationParameter, toLocationParameter, fromDateParameter, toDateParameter, fromTimeParameter, toTimeParameter, fromDescriptionParameter, toDescriptionParameter, fareParameter, numberOfSeatsParameter);
        }
    
        public virtual int proc_AddTrip(Nullable<int> busID, string fromLocation, string toLocation)
        {
            var busIDParameter = busID.HasValue ?
                new ObjectParameter("BusID", busID) :
                new ObjectParameter("BusID", typeof(int));
    
            var fromLocationParameter = fromLocation != null ?
                new ObjectParameter("FromLocation", fromLocation) :
                new ObjectParameter("FromLocation", typeof(string));
    
            var toLocationParameter = toLocation != null ?
                new ObjectParameter("ToLocation", toLocation) :
                new ObjectParameter("ToLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_AddTrip", busIDParameter, fromLocationParameter, toLocationParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<proc_AdminLogin_Result> proc_AdminLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_AdminLogin_Result>("proc_AdminLogin");
        }
    
        public virtual int proc_UpdateBus(Nullable<int> busID, string busNumber, Nullable<int> driverID, string driverPhone, string busType, Nullable<int> numberOfSeats, Nullable<bool> busAvailability)
        {
            var busIDParameter = busID.HasValue ?
                new ObjectParameter("BusID", busID) :
                new ObjectParameter("BusID", typeof(int));
    
            var busNumberParameter = busNumber != null ?
                new ObjectParameter("BusNumber", busNumber) :
                new ObjectParameter("BusNumber", typeof(string));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            var driverPhoneParameter = driverPhone != null ?
                new ObjectParameter("DriverPhone", driverPhone) :
                new ObjectParameter("DriverPhone", typeof(string));
    
            var busTypeParameter = busType != null ?
                new ObjectParameter("BusType", busType) :
                new ObjectParameter("BusType", typeof(string));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("NumberOfSeats", numberOfSeats) :
                new ObjectParameter("NumberOfSeats", typeof(int));
    
            var busAvailabilityParameter = busAvailability.HasValue ?
                new ObjectParameter("BusAvailability", busAvailability) :
                new ObjectParameter("BusAvailability", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UpdateBus", busIDParameter, busNumberParameter, driverIDParameter, driverPhoneParameter, busTypeParameter, numberOfSeatsParameter, busAvailabilityParameter);
        }
    
        public virtual ObjectResult<proc_BusDetails_Result> proc_BusDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_BusDetails_Result>("proc_BusDetails");
        }
    
        public virtual ObjectResult<proc_DriverDetails_Result> proc_DriverDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_DriverDetails_Result>("proc_DriverDetails");
        }
    
        public virtual ObjectResult<proc_TicketDetails_Result> proc_TicketDetails(Nullable<int> bookingID)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_TicketDetails_Result>("proc_TicketDetails", bookingIDParameter);
        }
    
        public virtual ObjectResult<proc_MostPreferedBusType_Result> proc_MostPreferedBusType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_MostPreferedBusType_Result>("proc_MostPreferedBusType");
        }
    
        public virtual ObjectResult<proc_MostPreferedRoutes_Result> proc_MostPreferedRoutes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_MostPreferedRoutes_Result>("proc_MostPreferedRoutes");
        }
    
        public virtual ObjectResult<proc_ProfitPercentage_Result> proc_ProfitPercentage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ProfitPercentage_Result>("proc_ProfitPercentage");
        }
    
        public virtual ObjectResult<proc_ReservationDetailsofCustomer_Result> proc_ReservationDetailsofCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_ReservationDetailsofCustomer_Result>("proc_ReservationDetailsofCustomer");
        }
    
        public virtual int proc_Feedback(Nullable<int> pNR, Nullable<int> journeyRatings, string comments)
        {
            var pNRParameter = pNR.HasValue ?
                new ObjectParameter("PNR", pNR) :
                new ObjectParameter("PNR", typeof(int));
    
            var journeyRatingsParameter = journeyRatings.HasValue ?
                new ObjectParameter("JourneyRatings", journeyRatings) :
                new ObjectParameter("JourneyRatings", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_Feedback", pNRParameter, journeyRatingsParameter, commentsParameter);
        }
    }
}
